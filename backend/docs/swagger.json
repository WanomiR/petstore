{
    "swagger": "2.0",
    "info": {
        "description": "Petstore API implementation",
        "title": "Petstore",
        "contact": {},
        "version": "1.0.0"
    },
    "host": "localhost:8888",
    "basePath": "/",
    "paths": {
        "/pet": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing pet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pet"
                ],
                "summary": "update pet",
                "parameters": [
                    {
                        "description": "Pet object that needs to be added to the store",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.Pet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new pet to the store",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pet"
                ],
                "summary": "create pet",
                "parameters": [
                    {
                        "description": "Pet object that needs to be added to the store",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.Pet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    }
                }
            }
        },
        "/pet/findByStatus": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Finds pets by status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pet"
                ],
                "summary": "get pets by status",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Status values that need to be considered for filter\u003cbr\u003eAvailable values : \u003ci\u003eavailable, pending, sold\u003c/i\u003e",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.Pet"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    }
                }
            }
        },
        "/pet/{petId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Find pet by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pet"
                ],
                "summary": "get pet by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Pet ID",
                        "name": "petId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Pet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a pet in the store with form data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pet"
                ],
                "summary": "update pet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Pet ID",
                        "name": "petId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pet name",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Pet status",
                        "name": "status",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a pet",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pet"
                ],
                "summary": "delete pet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Pet ID",
                        "name": "petId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    }
                }
            }
        },
        "/pet/{petId}/uploadImage": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Uploads an image",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pet"
                ],
                "summary": "upload image",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Pet ID",
                        "name": "petId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Additional data to pass to server",
                        "name": "additionalMetadata",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "File to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    }
                }
            }
        },
        "/store/inventory": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns pet inventories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "store"
                ],
                "summary": "get inventory",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Inventory"
                        }
                    }
                }
            }
        },
        "/store/order": {
            "post": {
                "description": "Place an order for a pet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "store"
                ],
                "summary": "create order",
                "parameters": [
                    {
                        "description": "Order placed for purchasing a pet",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.Order"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    }
                }
            }
        },
        "/store/order/{orderId}": {
            "get": {
                "description": "Fund purchase order by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "store"
                ],
                "summary": "get order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of order that needs to be fetched",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Order"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete purchase order by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "store"
                ],
                "summary": "delete order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the order that needs to be deleted",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "description": "Create user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "create user",
                "parameters": [
                    {
                        "description": "User object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    }
                }
            }
        },
        "/user/createWithArray": {
            "post": {
                "description": "Create list of users with given input array",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "create with array",
                "parameters": [
                    {
                        "description": "List of user objects",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.User"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "get": {
                "description": "Log user into the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The username for login",
                        "name": "username",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The password for login in clear text",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    }
                }
            }
        },
        "/user/logout": {
            "get": {
                "description": "Logs out currently logged user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    }
                }
            }
        },
        "/user/{username}": {
            "get": {
                "description": "Get user by username",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "get user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name that needs to be fetched",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name that need to be updated",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated user object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name that needs to be deleted",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/rr.JSONResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entities.Category": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "cat"
                }
            }
        },
        "entities.Inventory": {
            "type": "object",
            "additionalProperties": {
                "type": "integer"
            }
        },
        "entities.Order": {
            "type": "object",
            "required": [
                "petId",
                "quantity"
            ],
            "properties": {
                "complete": {
                    "type": "boolean",
                    "example": true
                },
                "id": {
                    "type": "integer"
                },
                "petId": {
                    "type": "integer",
                    "example": 1
                },
                "quantity": {
                    "type": "integer",
                    "example": 1
                },
                "shipDate": {
                    "type": "string",
                    "example": "2024-08-01T07:25:40.698Z"
                },
                "status": {
                    "description": "placed | approved | delivered",
                    "type": "string",
                    "example": "placed"
                }
            }
        },
        "entities.Pet": {
            "type": "object",
            "required": [
                "category",
                "name",
                "status"
            ],
            "properties": {
                "category": {
                    "$ref": "#/definitions/entities.Category"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "doggy"
                },
                "photoUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "description": "available | pending | sold",
                    "type": "string",
                    "example": "available"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Tag"
                    }
                }
            }
        },
        "entities.Tag": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "fluffy"
                }
            }
        },
        "entities.User": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                },
                "firstName": {
                    "type": "string",
                    "example": "John"
                },
                "id": {
                    "type": "integer"
                },
                "lastName": {
                    "type": "string",
                    "example": "Doe"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                },
                "phone": {
                    "type": "string",
                    "example": "7-999-999-99-99"
                },
                "userStatus": {
                    "type": "integer",
                    "example": 0
                },
                "username": {
                    "type": "string",
                    "example": "johndoe001"
                }
            }
        },
        "rr.JSONResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}