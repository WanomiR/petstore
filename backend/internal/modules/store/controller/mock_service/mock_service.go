// Code generated by MockGen. DO NOT EDIT.
// Source: ../service/interface.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	entities "backend/internal/modules/store/entities"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStoreServicer is a mock of StoreServicer interface.
type MockStoreServicer struct {
	ctrl     *gomock.Controller
	recorder *MockStoreServicerMockRecorder
}

// MockStoreServicerMockRecorder is the mock recorder for MockStoreServicer.
type MockStoreServicerMockRecorder struct {
	mock *MockStoreServicer
}

// NewMockStoreServicer creates a new mock instance.
func NewMockStoreServicer(ctrl *gomock.Controller) *MockStoreServicer {
	mock := &MockStoreServicer{ctrl: ctrl}
	mock.recorder = &MockStoreServicerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStoreServicer) EXPECT() *MockStoreServicerMockRecorder {
	return m.recorder
}

// CreateOrder mocks base method.
func (m *MockStoreServicer) CreateOrder(ctx context.Context, order entities.Order) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrder", ctx, order)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOrder indicates an expected call of CreateOrder.
func (mr *MockStoreServicerMockRecorder) CreateOrder(ctx, order interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrder", reflect.TypeOf((*MockStoreServicer)(nil).CreateOrder), ctx, order)
}

// DeleteOrder mocks base method.
func (m *MockStoreServicer) DeleteOrder(ctx context.Context, orderId int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteOrder", ctx, orderId)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteOrder indicates an expected call of DeleteOrder.
func (mr *MockStoreServicerMockRecorder) DeleteOrder(ctx, orderId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteOrder", reflect.TypeOf((*MockStoreServicer)(nil).DeleteOrder), ctx, orderId)
}

// GetOrderById mocks base method.
func (m *MockStoreServicer) GetOrderById(ctx context.Context, orderId int) (entities.Order, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrderById", ctx, orderId)
	ret0, _ := ret[0].(entities.Order)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrderById indicates an expected call of GetOrderById.
func (mr *MockStoreServicerMockRecorder) GetOrderById(ctx, orderId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrderById", reflect.TypeOf((*MockStoreServicer)(nil).GetOrderById), ctx, orderId)
}
